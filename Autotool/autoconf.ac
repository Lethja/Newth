AC_PREREQ([2.71])
AC_INIT([Newth],[0])
AM_INIT_AUTOMAKE([-Wall foreign subdir-objects])
AC_CONFIG_SRCDIR([src])
AC_CONFIG_FILES([Makefile])
AC_CONFIG_MACRO_DIRS([m4])
AC_CANONICAL_HOST

# Check if this is a Windows build
AC_MSG_CHECKING([whether to build with mingw for a Windows host])
AS_CASE([$host_os],
        [*mingw*], [windows_host=yes],
        [windows_host=no])
AC_MSG_RESULT([$windows_host])
AM_CONDITIONAL([WINDOWS_HOST], [test "x$windows_host" = "xyes"])

m4_include([m4/ax_debug.m4])
AX_CHECK_ENABLE_DEBUG([no])

# Checks for programs.
AC_PROG_CC
AC_SYS_LARGEFILE

AC_ARG_WITH([off_t],
    [AS_HELP_STRING([--with-off_t=bits],
    [Specify the size of bits off_t should be (defaults to 64)])],
    [off_t="$withval"], [off_t="64"]
)

AC_DEFINE_UNQUOTED([_FILE_OFFSET_BITS], [$off_t])

# Checks for libraries.
AC_ARG_ENABLE(
    [iiface],
	AS_HELP_STRING(
	    [--enable-iiface],
		[Manually bind a socket to every network adapter at the application level (use only if the operating system can't do this internally)]
    ),
    [AC_DEFINE(MANUAL_IFACE_LISTEN)]
)

AC_ARG_ENABLE(
    [poll],
	AS_HELP_STRING(
	    [--enable-poll],
		[Use poll() for multiplexing instead of select()]
    ),
    [multiplex_poll=yes],
    [multiplex_poll=no]
)

AM_CONDITIONAL([MULTIPLEX_POLL], [test "x$multiplex_poll" = "xyes"])

AC_ARG_ENABLE(
    [reuse],
	AS_HELP_STRING(
	    [--disable-reuse],
		[Do not allow HTTP connections to reuse an existing TCP connection, close every TCP connection after their original request]
    )
)

AS_IF(
    [test "x$enable_reuse" == "xno"],
    [AC_DEFINE(HTTP_CONNECTION_NEVER_REUSE)]
)

PKG_CHECK_MODULES([cmocka], [cmocka], [have_cmocka=yes], [have_cmocka=no])
AM_CONDITIONAL([CMOCKA], [test "$have_cmocka" = "yes"])

AC_ARG_WITH(
    [readline],
    AS_HELP_STRING(
        [--without-readline],
        [Build dl without GNU readline support in interactive mode]
    )
)

AS_IF(
    [test "x$with_readline" != "xno"],
    [PKG_CHECK_MODULES([readline], [readline], [have_readline=yes], [have_readline=no])],
    [have_readline=no]
)

AS_IF(
    [test "$have_readline" = "yes"],
    [AC_DEFINE(READLINE)]
)

AM_CONDITIONAL([READLINE], [test "$have_readline" = "yes"])

AC_SEARCH_LIBS([getsockname], [nsl socket resolv network])
AC_SEARCH_LIBS([getifaddrs], [nsl socket resolv network])
AC_SEARCH_LIBS([inet_ntoa], [nsl socket resolv network])
AC_SEARCH_LIBS([inet_ntop], [nsl socket resolv network])

# Checks for header files.
AC_CHECK_HEADERS([string.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T

# Checks for library functions.
AM_PROG_AR

AC_OUTPUT
